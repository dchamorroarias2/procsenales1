%%Punto 1: Halle la función matemática que modela la gráfica propuesta:
%%V=[-2u(t+1)+2r(t+1)-2r(t-1)+r(t-2)-u(t-2)+r(t-4)-r(t-5)+r(t-7)+u(t-7)]

clc;
clear;
close all;

t1=-5:0.0001:9;
f=-2.*heaviside(t1+1)+2.*(t1+1).*heaviside(t1+1)-2.*(t1-1).*heaviside(t1-1)+heaviside(t1-2)-(t1-2).*heaviside(t1-2)...
+(t1-4).*heaviside(t1-4)-(t1-5).*heaviside(t1-5)+(t1-7).*heaviside(t1-7)+heaviside(t1-7);

plot(t1,f,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-3 8 -3 4]);
title('V = -2u(t+1) + 2r(t+1) - 2r(t-1) + r(t-2) - u(t-2) + r(t-4) - r(t-5) + r(t-7) + u(t-7)','color','red');
grid on;


===============================================================================================


%%Punto 2: Si una señal original es u(t), graficar las siguientes funciones
%%Literal A: u(1/3(t-0.5))

clc;
clear;
close all;

t1=-5:0.01:9;
y1=1*ustep(0.33*t1,-0.5);
y=y1;
plot(t1,y,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-2 6 -1 5]);
title('a)   u(^{1}/_{3}(t-0.5))','color','red');

function y = ustep(t1,ad)
                                                                            
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) = 1;
        end
    end
end


===============================================================================================

%%Punto 2: Si una señal original es u(t), graficar las siguientes funciones
%%Literal B: 3u(3-t))

clc;
clear;
close all;

t1=-5:0.01:9;
y1=3*ustep(-t1,3);
y=y1;
plot(t1,y,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-1 8 -1 4]);
title('b)   3u(3-t)','color','red');

function y = ustep(t1,ad)
                                                                           
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) = 1;
        end
    end
end

===============================================================================================

%%Punto 2: Si una señal original es u(t), graficar las siguientes funciones
%%Literal C: 5u(-1/5(3t+3/5))

clc;
clear;
close all;

t1=-5:0.01:9;
y1=5*ustep(-0.6*t1,0.12);
y=y1;
plot(t1,y,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-1 2 -1 6]);
title('c)   5u(-^{1}/_{5}(3t + ^{3}/_{5}))','color','red');

function y = ustep(t1,ad)
                                                                            
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) = 1;
        end
    end
end

===============================================================================================

%%Punto 2: Si una señal original es u(t), graficar las siguientes funciones
%%Literal D: 7u(6t+12)

clc;
clear;
close all;

t1=-5:0.01:9;
y1=7*ustep(6*t1,+12);
y=y1;
plot(t1,y,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-5 3 -1 10]);
title('d)   7u(6t+12)','color','red');

function y = ustep(t1,ad)
                                                                            
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) = 1;
        end
    end
end

===============================================================================================

%%Punto 5: Graficar la siguiente función:
%%y(t) = 2tri(t-1) + tri((t-2)/2) + dirac(t+3) + u(t-3) + ramp(3t-6)

clc; 
clear;
close all;

t1=-5:0.0001:9;
y1=tri(t1,2,-1);
y2=tri(t1/2,1,-1);
y3=impulse(t1,+3);
y4=ustep(t1,-3);
y5=ramp(3*t1,1,-6);
y=y1+y2+y3+y4+y5;
plot(t1,y,'linewidth',2,'color','blue');
set(gcf,'name','FUNCION MATEMATICA DE SEÑALES BASICAS','numbertitle','off')
axis([-5 5 -1 10]);
title('y(t) = 2tri(t-1) + tri(^{(t - 2)}/{2}) + \delta(t+3) + u(t-3) + ramp(3t-6)','color','red');
grid on;


function y = ramp(t1,m,ad)
                                                                            
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) =m* (t1(i)+ad);
        end
    end
end

function y = ustep(t1,ad)
                                                                            
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)>= -ad,
            y(i) = 1;
        end
    end
end

function y = impulse(t1,ad)
                                                                           
N= length(t1);
y = zeros(1,N);
    for i = 1:N,
        if t1(i)== -ad,
            y(i) = 1000;
        end
    end
end
function y = tri(t1,m,ad)
    y = m*( ramp(t1,m,ad+1) - 2*ramp(t1,m,ad) + ramp(t1,m,ad-1) );
end